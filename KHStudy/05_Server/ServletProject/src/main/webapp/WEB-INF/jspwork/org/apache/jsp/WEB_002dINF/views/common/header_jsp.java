/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.73
 * Generated at: 2023-04-24 07:43:33 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.common;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class header_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar", Long.valueOf(1682043785190L));
    _jspx_dependants.put("jar:file:/D:/workspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp2/wtpwebapps/boardProjec/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar!/META-INF/c.tld", Long.valueOf(1425946270000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<link rel=\"stylesheet\" href=\"/resources/css/main-style.css\">\r\n");
      out.write("\r\n");
      out.write("<!-- font awesome 라이브러리 추가 + key 등록 -->\r\n");
      out.write("<script src=\"https://kit.fontawesome.com/9c2aaccfe5.js\" crossorigin=\"anonymous\"></script>\r\n");
      out.write("\r\n");
      out.write("<header>\r\n");
      out.write("    <section>\r\n");
      out.write("        <!-- 클릭 시 메인페이지로 이동하는 로고 -->\r\n");
      out.write("        <a href=\"#\">\r\n");
      out.write("            <img src=\"/resources/images/logo.png\" alt=\"로고\" id=\"homeLogo\">\r\n");
      out.write("        </a>\r\n");
      out.write("    </section>\r\n");
      out.write("    <section>\r\n");
      out.write("        <!-- 검색어 입력할 수 있는 요소 배치 -->\r\n");
      out.write("        <article class=\"search-area\">\r\n");
      out.write("            <!-- \r\n");
      out.write("                action : 내부 input의 작성된 값을 제출할 경로/주소\r\n");
      out.write("                method : 어떤 방식(GET/POST)으로 제출할지 지정 \r\n");
      out.write("                - GET : input 태그 값을 주소에 담아서 제출(주소에 보임)\r\n");
      out.write("                - POST : input 태그 값을 주소에 담지 않고 제출(주소에 안보임)\r\n");
      out.write("                        -> HTTP body에 담아서 제출\r\n");
      out.write("            -->\r\n");
      out.write("            <form action=\"#\" method=\"GET\">\r\n");
      out.write("                <fieldset> <!-- form 태그 내 영역 구분 -->\r\n");
      out.write("                    <!-- \r\n");
      out.write("                        input의 name 속성 == 제출 시 key 값\r\n");
      out.write("                        input에 입력된 내용 == 제출 시 value 값\r\n");
      out.write("\r\n");
      out.write("                        autocomplete=\"off\" : 브라우저가 제공하는 자동완성 기능 off\r\n");
      out.write("                    -->\r\n");
      out.write("                    <input type=\"search\" name=\"query\" id=\"query\" placeholder=\"검색어를 입력해주세요\" autocomplete=\"off\">\r\n");
      out.write("                    <!-- 검색 버튼 -->\r\n");
      out.write("                    <button id=\"searchBtn\" class=\"fa-solid fa-magnifying-glass\"></button>\r\n");
      out.write("                </fieldset>\r\n");
      out.write("            </form>\r\n");
      out.write("        </article>\r\n");
      out.write("    </section>\r\n");
      out.write("    <section></section>\r\n");
      out.write("</header>\r\n");
      out.write("\r\n");
      out.write("<nav>\r\n");
      out.write("    <ul>\r\n");
      out.write("        <li><a href=\"#\">공지사항</a></li>\r\n");
      out.write("        <li><a href=\"#\">자유 게시판</a></li>\r\n");
      out.write("        <li><a href=\"#\">질문 게시판</a></li>\r\n");
      out.write("        <li><a href=\"#\">FAQ</a></li>\r\n");
      out.write("        <li><a href=\"#\">1:1문의</a></li>\r\n");
      out.write("    </ul>\r\n");
      out.write("</nav>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
